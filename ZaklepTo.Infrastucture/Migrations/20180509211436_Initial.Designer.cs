// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using ZaklepTo.Infrastructure.EntityFramwerork;

namespace ZaklepTo.Infrastructure.Migrations
{
    [DbContext(typeof(ZaklepToContext))]
    [Migration("20180509211436_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZaklepTo.Core.Domain.Customer", b =>
                {
                    b.Property<string>("Login")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Salt");

                    b.HasKey("Login");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Employee", b =>
                {
                    b.Property<string>("Login")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<Guid?>("RestaurantId");

                    b.Property<string>("Salt");

                    b.HasKey("Login");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Owner", b =>
                {
                    b.Property<string>("Login")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<Guid?>("RestaurantId");

                    b.Property<string>("Salt");

                    b.HasKey("Login");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerLogin");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsConfirmed");

                    b.Property<Guid?>("RestaurantId");

                    b.Property<Guid?>("TableId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerLogin");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cuisine");

                    b.Property<string>("Description");

                    b.Property<string>("Localization");

                    b.Property<string>("Name");

                    b.Property<string>("RepresentativePhotoUrl");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NumberOfSeats");

                    b.Property<Guid?>("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Employee", b =>
                {
                    b.HasOne("ZaklepTo.Core.Domain.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Owner", b =>
                {
                    b.HasOne("ZaklepTo.Core.Domain.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Reservation", b =>
                {
                    b.HasOne("ZaklepTo.Core.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerLogin");

                    b.HasOne("ZaklepTo.Core.Domain.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.HasOne("ZaklepTo.Core.Domain.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId");
                });

            modelBuilder.Entity("ZaklepTo.Core.Domain.Table", b =>
                {
                    b.HasOne("ZaklepTo.Core.Domain.Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId");
                });
#pragma warning restore 612, 618
        }
    }
}
